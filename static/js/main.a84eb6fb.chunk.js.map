{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectUser","className","map","todo","key","id","classNames","completed","type","readOnly","checked","title","onClick","userId","API_URL","getUserById","fetch","then","response","json","data","CurrentUser","state","currentUser","this","props","user","setState","prevProps","name","email","phone","clearUser","React","Component","App","selectedUserId","todosFromServer","filterHandler","event","filteredValue","target","value","filter","includes","selectHandler","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a84eb6fb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectUser }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={\n              classNames(\n                'TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )\n            }\n          >\n\n            <label>\n              <input type=\"checkbox\" readOnly checked={todo.completed} />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => selectUser(todo.userId)}\n            >\n              User&nbsp;\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com`;\n\nexport const getAllTodos = () => fetch(`${API_URL}/todos`)\n  .then(response => response.json())\n  .then(response => response.data);\n\nexport const getUserById = id => fetch(`${API_URL}/users/${id}`)\n  .then(response => response.json())\n  .then(response => response.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserById } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currentUser: {},\n  }\n\n  componentDidMount() {\n    getUserById(this.props.userId)\n      .then((user) => {\n        this.setState({\n          currentUser: user,\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUserById(this.props.userId)\n        .then((user) => {\n          this.setState({\n            currentUser: user,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {currentUser.name}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n        <button\n          type=\"button\"\n          onClick={this.props.clearUser}\n          className=\"TodoList__user-button--selected button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    todosFromServer: [],\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then((data) => {\n        this.setState({\n          todos: data,\n          todosFromServer: [...data],\n        });\n      });\n  }\n\n  selectUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  filterHandler = (event) => {\n    const filteredValue = event.target.value;\n\n    this.setState((state) => {\n      const filteredTodos = [...state.todosFromServer].filter((todo) => {\n        const { title } = todo;\n\n        return title && title.includes(filteredValue);\n      });\n\n      return {\n        todos: filteredTodos,\n      };\n    });\n  }\n\n  selectHandler = (event) => {\n    const selectedValue = event.target.value;\n\n    switch (selectedValue) {\n      case 'active':\n        this.setState(state => ({\n          todos: [...state.todosFromServer].filter(todo => !todo.completed),\n        }));\n        break;\n\n      case 'completed':\n        this.setState(state => ({\n          todos: [...state.todosFromServer].filter(todo => todo.completed),\n        }));\n        break;\n\n      default:\n        this.setState(state => ({\n          todos: [...state.todosFromServer],\n        }));\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <>\n        <div>\n          <input\n            placeholder=\"filter\"\n            onChange={this.filterHandler}\n          />\n          <select onChange={this.selectHandler}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n        <div className=\"App\">\n          <div className=\"App__sidebar\">\n            <TodoList todos={todos} selectUser={this.selectUser} />\n          </div>\n\n          <div className=\"App__content\">\n            <div className=\"App__content-container\">\n              {selectedUserId ? (\n                <CurrentUser\n                  userId={selectedUserId}\n                  clearUser={this.clearUser}\n                />\n              ) : 'No user selected'}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}